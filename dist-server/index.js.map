{"version":3,"sources":["../src/Carousel.js","../src/ErrorBoundary.js","../src/Modal.js","../src/ThemeContext.js","../src/Details.js","../src/Pet.js","../src/Results.js","../src/useBreedList.js","../src/SearchParams.js","../src/app.js","index.js"],"names":["Carousel","Component","active","event","setState","target","dataset","index","render","state","images","props","map","photo","handleIndexClick","ErrorBoundary","hasError","redirect","getDerivedStateFromError","componentDidCatch","error","info","console","componentDidUpdate","setTimeout","children","Modal","modalRootElement","document","getElementById","elementRef","current","createElement","appendChild","removeChild","ThemeContext","Details","loading","showModal","window","location","componentDidMount","requestUrl","match","params","id","response","fetch","data","json","Object","assign","pets","animal","breed","city","description","name","theme","toggleModal","backgroundColor","adoptAPet","DetailsWithRouter","DetailsWithErrorBoundary","Pet","imageToShow","length","Results","pet","localAnimalCache","useBreedList","animalBreedList","setAnimalBreedList","status","setStatus","requestAnimalBreedList","breeds","SearchParams","ANIMALS","setLocation","setAnimal","setBreed","setPets","setTheme","requestPetData","preventDefault","value","AdoptionApp","PORT","process","env","html","fs","readFileSync","toString","parts","split","app","use","express","static","request","staticContext","reactMarkup","url","statusCode","send","listen","log"],"mappings":";AA+CeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA/Cf,IAAA,EAAA,QAAA,SA+CeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EA7Cf,MAAMA,UAAiBC,EAAvB,UAAiC,eAAA,GAAA,SAAA,GACrB,EAAA,KAAA,QAAA,CACJC,OAAQ,IAOQC,EAAAA,KAAAA,mBAAAA,IACXC,KAAAA,SAAS,CAEVF,QAASC,EAAME,OAAOC,QAAQC,UAItCC,SACU,MAAA,OAAEN,GAAW,KAAKO,OAClB,OAAEC,GAAW,KAAKC,MAExB,OACI,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,WAAf,SAAA,EACI,EAAA,EAAA,KAAA,MAAA,CAAK,IAAKD,EAAOR,GAAS,IAAI,YAC9B,EAAA,EAAA,KAAA,MAAA,CAAK,UAAU,mBAEPQ,SAAAA,EAAOE,IAAI,CAACC,EAAON,KAGX,EAAA,EAAA,KAAA,MAAA,CAEI,IAAKM,EACON,aAAAA,EACZ,QAAS,KAAKO,iBACd,UAAsB,WAAVP,EAAqB,SAAW,GAC5C,IAAI,oBALCM,UA7BnCb,EAAAA,EAKoB,eAAA,CAClBU,OAAQ,CAAC,mDAuCFV,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACXAe,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApCf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,oBAmCeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAjCf,MAAMA,UAAsBd,EAA5B,UAAsC,eAAA,GAAA,SAAA,GAC1B,EAAA,KAAA,QAAA,CAAEe,UAAU,EAAOC,UAAU,IAE9BC,kCACI,MAAA,CAAEF,UAAU,GAGvBG,kBAAkBC,EAAOC,GAErBC,QAAQF,MAAM,qCAAsCA,EAAOC,GAG/DE,qBACQ,KAAKd,MAAMO,UACXQ,WAAW,IAAM,KAAKpB,SAAS,CAAEa,UAAU,IAAS,KAI5DT,SACQ,OAAA,KAAKC,MAAMQ,UACH,EAAA,EAAA,KAAA,EAAD,SAAA,CAAU,GAAG,MACb,KAAKR,MAAMO,UAEd,EAAA,EAAA,MAAA,KAAA,CAAA,SAAA,CAAA,+BACgC,EAAA,EAAA,KAAA,EAAD,KAAA,CAAM,GAAG,IAAT,SAAA,oEAKhC,KAAKL,MAAMc,UAIXV,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACbAW,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvBf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,aAsBeA,EAAAA,QAAAA,qBApBf,IAAIC,EAEJ,MAAMD,EAAQ,EAAGD,SAAAA,MACbE,EAAmBA,GAAsCC,SAASC,eAAe,SAE3EC,MAAAA,GAAa,EAAO,EAAA,QAAA,MAY1B,OAVKA,EAAWC,UACZD,EAAWC,QAAUH,SAASI,cAAc,SAGtC,EAAA,EAAA,WAAA,KACNL,EAAiBM,YAAYH,EAAWC,SAEjC,IAAMJ,EAAiBO,YAAYJ,EAAWC,UACtD,KAEI,EAAA,EAAA,eAAa,EAAA,EAAA,KAAA,MAAA,CAAON,SAAAA,IAAkBK,EAAWC,UAG7CL,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACnBAS,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAJf,IAAA,EAAA,QAAA,SAEA,MAAMA,GAAe,EAAc,EAAA,eAAA,CAAC,OAAQ,SAE7BA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC+Dd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAnED,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,mBA8DC,EAAA,QAAA,qBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5DD,MAAMC,UAAgBnC,EAAtB,UAAgC,eAAA,GAAA,SAAA,GACpB,EAAA,KAAA,QAAA,CAAEoC,SAAS,EAAMC,WAAW,IAUtB,EAAA,KAAA,cAAA,IAAM,KAAKlC,SAAS,CAAEkC,WAAY,KAAK7B,MAAM6B,aAC/C,EAAA,KAAA,YAAA,IAAOC,OAAOC,SAAW,2BAT/BC,0BACIC,MAAAA,yCAAoD,KAAK/B,MAAMgC,MAAMC,OAAOC,KAC5EC,QAAiBC,MAAML,GAEvBM,QAAaF,EAASG,OACvB7C,KAAAA,SAAS8C,OAAOC,OAAO,CAAEd,SAAS,GAASW,EAAKI,KAAK,KAM9D5C,SACQ,GAAA,KAAKC,MAAM4B,QACX,OAAO,EAAA,EAAA,KAAA,KAAA,CAAA,SAAA,eAGL,MAAA,OAAEgB,EAAF,MAAUC,EAAV,KAAiBC,EAAjB,MAAuB9C,EAAvB,YAA8B+C,EAA9B,KAA2CC,EAA3C,OAAiD/C,EAAjD,UAAyD4B,GAAc,KAAK7B,MAElF,OACI,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,UAAf,SAAA,EACK,EAAA,EAAA,KAAA,EAAD,QAAA,CAAU,OAAQC,KAClB,EAAA,EAAA,MAAA,MAAA,CAAA,SAAA,EACI,EAAA,EAAA,KAAA,KAAA,CAAM+C,SAAAA,KACN,EAAA,EAAA,MAAA,KAAA,CAAMJ,SAAAA,CAAAA,EAAaC,MAAAA,EAAYC,MAAAA,EAAU9C,KAAAA,MACxC,EAAA,EAAA,KAAA,EAAD,QAAc,SAAd,CACK,SAAA,EAAEiD,MACC,EAAA,EAAA,MAAA,SAAA,CAAQ,QAAU,KAAKC,YAAc,MAAQ,CAAEC,gBAAiBF,GAAiBD,SAAAA,CAAAA,SAAAA,EAAjF,UAGR,EAAA,EAAA,KAAA,IAAA,CAAKD,SAAAA,IAEDlB,GACK,EAAA,EAAA,KAAA,EAAD,QAAA,CAAA,UACI,EAAA,EAAA,MAAA,MAAA,CAAA,SAAA,EACI,EAAA,EAAA,MAAA,KAAA,CAA8BmB,SAAAA,CAAAA,2BAAAA,EAA9B,QACA,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,UAAf,SAAA,EACI,EAAA,EAAA,KAAA,SAAA,CAAQ,QAAU,KAAKI,UAAvB,SAAA,SACA,EAAA,EAAA,KAAA,SAAA,CAAQ,QAAY,KAAKF,YAAzB,SAAA,eAIZ,YAQ5B,MAAMG,GAAoB,EAAW1B,EAAAA,YAAAA,GAEtB,SAAS2B,IACpB,OACK,EAAA,EAAA,KAAA,EAAD,QAAA,CAAA,UACK,EAAA,EAAA,KAAA,EAAD;;ACxBGC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAxCf,IAAA,EAAA,QAAA,oBAwCeA,EAAAA,QAAAA,qBAxBf,MAAMA,EAAM,EACVP,KAAAA,EACAJ,OAAAA,EACAC,MAAAA,EACA5C,OAAAA,EACA8B,SAAAA,EACAK,GAAAA,MAGMoB,MAAAA,EAAcvD,GAAUA,EAAOwD,OAAS,EAAIxD,EAAO,GADlC,gDAGvB,OACG,EAAA,EAAA,MAAA,EAAD,KAAA,CAAM,eAAgBmC,IAAM,UAAU,MAAtC,SAAA,EACE,EAAA,EAAA,KAAA,MAAA,CAAK,UAAU,kBAAf,UACE,EAAA,EAAA,KAAA,MAAA,CAAK,IAAKoB,EAAa,IAAKR,OAE9B,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,OAAf,SAAA,EACE,EAAA,EAAA,KAAA,KAAA,CAAKA,SAAAA,KACL,EAAA,EAAA,KAAA,KAAA,CAAM,YAAEJ,OAAYC,OAAWd,aAMxBwB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACfAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAzBf,IAAA,EAAA,EAAA,QAAA,UAyBeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAvBf,MAAMA,EAAU,EAAGf,KAAAA,MAEX,EAAA,EAAA,KAAA,MAAA,CAAK,UAAU,SACT,SAACA,EAAKc,OAGJd,EAAKxC,IAAIwD,IACJ,EAAA,EAAA,KAAA,EAAD,QAAA,CACI,KAAMA,EAAIX,KACV,OAAQW,EAAIf,OACZ,MAAOe,EAAId,MAEX,OAAQc,EAAI1D,OACZ,YAAa0D,EAAIb,SAASa,EAAI3D,QAC9B,GAAI2D,EAAIvB,IAHHuB,EAAIvB,MAPjB,EAAA,EAAA,KAAA,KAAA,CAAA,SAAA,0BAmBDsB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACSd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAlCD,IAAA,EAAA,QAAA,SAGA,MAAME,EAAmB,GAEV,SAASC,EAAajB,GAC3B,MAACkB,EAAiBC,IAAsB,EAAS,EAAA,UAAA,KAChDC,EAAQC,IAAa,EAAS,EAAA,UAAA,YA0B9B,OAxBG,EAAA,EAAA,WAAA,KACDrB,EAEMgB,EAAiBhB,GACxBmB,EAAmBH,EAAiBhB,IAKzBsB,iBACXH,EAAmB,IACnBE,EAAU,WAEJhC,MAAAA,+CAA0DW,IAC1DP,QAAiBC,MAAML,GAEvBM,QAAaF,EAASG,OAC5BoB,EAAiBhB,GAAUL,EAAK4B,QAAU,GAE1CJ,EAAmBH,EAAiBhB,IACpCqB,EAAU,UAdVC,GAJAH,EAAmB,KAoBxB,CAACnB,IAEG,CAACkB,EAAiBE;;ACiEdI,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlGf,IAAA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,mBA+FeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA7Ff,MAAMC,EAAU,CAAC,MAAO,MAAO,OAAQ,UAAW,UAE5CD,EAAe,KACX,MAACrC,EAAUuC,IAAe,EAAS,EAAA,UAAA,mBAClC1B,EAAQ2B,IAAa,EAAS,EAAA,UAAA,KAC9B1B,EAAO2B,IAAY,EAAS,EAAA,UAAA,KAC5B7B,EAAM8B,IAAW,EAAS,EAAA,UAAA,KAC1BN,IAAU,EAAavB,EAAAA,SAAAA,IACvBK,EAAOyB,IAAY,EAAWhD,EAAAA,YAAAA,EAAX,SAOXiD,eAAAA,IACL1C,MAAAA,6CAAwDW,cAAmBb,WAAkBc,IAC7FR,QAAiBC,MAAML,GAEvBM,QAAaF,EAASG,OAE5BiC,EAAQlC,EAAKI,MAGjB,OAdU,EAAA,EAAA,WAAA,KACNgC,KAED,KAYC,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,gBAAf,SAAA,EACI,EAAA,EAAA,MAAA,OAAA,CACI,SAAUjF,IACNA,EAAMkF,iBACND,KAHR,SAAA,EAMI,EAAA,EAAA,MAAA,QAAA,CAAO,QAAQ,WAAf,SAAA,CAAA,YAEI,EAAA,EAAA,KAAA,QAAA,CAAO,GAAG,WAAW,SAAUjF,GAAS4E,EAAY5E,EAAME,OAAOiF,OAAQ,MAAO9C,EAAU,YAAY,iBAE1G,EAAA,EAAA,MAAA,QAAA,CAAO,QAAQ,SAAf,SAAA,CAAA,UAEI,EAAA,EAAA,MAAA,SAAA,CACI,GAAG,SACH,MAAOa,EACP,SAAUlD,GAAS6E,EAAU7E,EAAME,OAAOiF,OAC1C,OAAQnF,GAAS6E,EAAU7E,EAAME,OAAOiF,OAJ5C,SAAA,EAAA,EAAA,EAAA,KAAA,SAAA,IAQQR,EAAQlE,IAAIyC,IACR,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAOA,EACVA,SAAAA,GADuBA,WAO5C,EAAA,EAAA,MAAA,QAAA,CAAO,QAAQ,QAAf,SAAA,CAAA,SAEI,EAAA,EAAA,MAAA,SAAA,CACI,GAAG,QACH,MAAOC,EACP,SAAUnD,GAAS8E,EAAS9E,EAAME,OAAOiF,OACzC,OAAQnF,GAAS8E,EAAS9E,EAAME,OAAOiF,OAJ3C,SAAA,EAAA,EAAA,EAAA,KAAA,SAAA,IAQQV,EAAOhE,IAAI0C,IACP,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAOA,EACVA,SAAAA,GADsBA,WAO3C,EAAA,EAAA,MAAA,QAAA,CAAO,QAAQ,QAAf,SAAA,CAAA,SAEI,EAAA,EAAA,MAAA,SAAA,CACI,GAAG,QACH,MAAOI,EACP,SAAWvD,GAASgF,EAAShF,EAAME,OAAOiF,OAC1C,OAASnF,GAASgF,EAAShF,EAAME,OAAOiF,OAJ5C,SAAA,EAMI,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,OAAd,SAAA,UACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,SAAd,SAAA,YACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,YAAd,SAAA,eACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,MAAd,SAAA,eAGR,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAO,CAAE1B,gBAAiBF,GAAlC,SAAA,eAEH,EAAA,EAAA,KAAA,EAAD,QAAA,CAAS,KAAMN,QAKZyB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC/CAU,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAnDf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,mBA8CeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA1Bf,MAAMA,EAAc,KACZ7B,MAAAA,GAAQ,EAAS,EAAA,UAAA,SAEvB,OACG,EAAA,EAAA,KAAA,EAAD,WAAA,CAAA,UACG,EAAA,EAAA,KAAA,EAAD,QAAc,SAAd,CAAuB,MAAOA,EAA9B,UACE,EAAA,EAAA,MAAA,MAAA,CAAA,SAAA,EACE,EAAA,EAAA,KAAA,SAAA,CAAA,UACG,EAAA,EAAA,KAAA,EAAD,KAAA,CAAM,GAAG,IAAT,UACE,EAAA,EAAA,KAAA,KAAA,CAAA,SAAA,0BAGH,EAAA,EAAA,MAAA,EAAD,OAAA,CAAA,SAAA,EACG,EAAA,EAAA,KAAA,EAAD,MAAA,CAAO,KAAK,eAAZ,UACG,EAAA,EAAA,KAAA,EAAD,QAAA,OAED,EAAA,EAAA,KAAA,EAAD,MAAA,CAAO,KAAK,IAAZ,UACG,EAAA,EAAA,KAAA,EAAD,QAAA,iBASC6B,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACzBf,aA1BA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,oBACA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,OACA,EAAA,EAAA,QAAA,eAsBA,EAAA,QAAA,qBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBA,MAAMC,EAAOC,QAAQC,IAAIF,MAAQ,IAC3BG,EAAOC,EAAGC,QAAAA,aAAa,mBAAmBC,WAC1CC,EAAQJ,EAAKK,MAAM,gBAEnBC,GAAM,EAAZ,EAAA,WAEAA,EAAIC,IAAI,QAASC,EAAQC,QAAAA,OAAO,SAChCH,EAAIC,IAAI,CAACG,EAASvD,KACRwD,MAAAA,EAAgB,GAChBC,GACD,EAAA,EAAA,KAAA,EAAD,aAAA,CAAc,IAAKF,EAAQG,IAAK,QAASF,EAAzC,UACK,EAAA,EAAA,KAAA,EAAD,QAAA,MAIRxD,EAAS2B,OAAO6B,EAAcG,YAAc,KAC5C3D,EAAS4D,QAAQX,EAAM,MAAK,EAAeQ,EAAAA,gBAAAA,KAAeR,EAAM,QAIpEE,EAAIU,OAAOnB,EAAM,KACblE,QAAQsF,mCAAmCpB","file":"index.js","sourceRoot":"../server","sourcesContent":["import { Component } from \"react\";\n\nclass Carousel extends Component {\n    state = {\n        active: 0\n    };\n\n    static defaultProps = {\n        images: ['http://pets-images.dev-apis.com/pets/none.jpg'],\n    };\n\n    handleIndexClick = (event) => {\n        this.setState({\n            // + symbol is to convert this index from a string to number to match active's data type\n            active: +event.target.dataset.index\n        })\n    }\n\n    render() {\n        const { active } = this.state;\n        const { images } = this.props;\n\n        return (\n            <div className=\"carousel\">\n                <img src={images[active]} alt=\"animal\" />\n                <div className=\"carousel-smaller\">\n                    {\n                        images.map((photo, index) => {\n                            return (\n                                // eslint-disable-next-line\n                                <img\n                                    key={photo}\n                                    src={photo}\n                                    data-index={index}\n                                    onClick={this.handleIndexClick}\n                                    className={ index === \"active\" ? \"active\" : \"\" }\n                                    alt=\"animal thumbnail\"\n                                />\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Carousel;","import { Component } from \"react\";\nimport { Link, Redirect} from \"react-router-dom\";\n\nclass ErrorBoundary extends Component {\n    state = { hasError: false, redirect: false };\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // In a Production-level app you can use this method to stream data to your logging services\n        console.error(\"Error caught in the Error Boundary\", error, info);\n    }\n\n    componentDidUpdate() {\n        if (this.state.hasError) {\n            setTimeout(() => this.setState({ redirect: true }), 5000);\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />\n        } else if (this.state.hasError) {\n            return (\n                <h2>\n                    This listing has an error. <Link to=\"/\">Click here to go back to the home page or wait five seconds.</Link>\n                </h2>\n            )\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nlet modalRootElement;\n\nconst Modal = ({ children }) => {\n    modalRootElement = modalRootElement ? modalRootElement : document.getElementById('modal');\n\n    const elementRef = useRef(null);\n    \n    if (!elementRef.current) {\n        elementRef.current = document.createElement('div');\n    };\n\n    useEffect(() => {\n        modalRootElement.appendChild(elementRef.current);\n        // This will destory the ref\n        return () => modalRootElement.removeChild(elementRef.current);\n    }, []);\n\n    return createPortal(<div>{ children }</div>, elementRef.current);\n}\n\nexport default Modal;","import { createContext } from \"react\";\n// You generally should provide a default value as an argument to `createContext`\nconst ThemeContext = createContext(['blue', () => {}]);\n\nexport default ThemeContext;","import { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Carousel from \"./Carousel\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Modal from \"./Modal\";\nimport ThemeContext from \"./ThemeContext\";\n\nclass Details extends Component {\n    state = { loading: true, showModal: false };\n\n    async componentDidMount() {\n        const requestUrl = `http://pets-v2.dev-apis.com/pets?id=${this.props.match.params.id}`;\n        const response = await fetch(requestUrl);\n\n        const data = await response.json();\n        this.setState(Object.assign({ loading: false }, data.pets[0]));\n    }\n\n    toggleModal = () => this.setState({ showModal: !this.state.showModal });\n    adoptAPet = () => (window.location = 'http://bit.ly/pet-adopt');\n\n    render() {\n        if (this.state.loading) {\n            return <h2>loading...</h2>\n        }\n        \n        const { animal, breed, city, state, description, name, images, showModal } = this.state;\n\n        return (\n            <div className=\"details\">\n                <Carousel images={images} />\n                <div>\n                    <h1>{ name }</h1>\n                    <h2>{ animal } - { breed } - { city }, { state }</h2>\n                    <ThemeContext.Consumer>\n                        {([theme]) => (\n                            <button onClick={ this.toggleModal } style={ { backgroundColor: theme }}>Adopt { name }!</button>\n                        )}\n                    </ThemeContext.Consumer>\n                    <p>{ description }</p>\n                    {\n                        showModal ?  (\n                            <Modal>\n                                <div>\n                                    <h1>Would you like to adopt { name }?</h1>\n                                    <div className=\"buttons\">\n                                        <button onClick={ this.adoptAPet }>Yes</button>\n                                        <button onClick = { this.toggleModal }>No</button>\n                                    </div>\n                                </div>\n                            </Modal>\n                        ) : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst DetailsWithRouter = withRouter(Details);\n\nexport default function DetailsWithErrorBoundary() {\n    return (\n        <ErrorBoundary>\n            <DetailsWithRouter />\n        </ErrorBoundary>\n    )\n}","import { Link } from \"react-router-dom\";\n\n// This is WITHOUT JSX\n// const Pet = (props) => {\n//     return React.createElement(\n//       \"div\",\n//       {},\n//       // The array here is actually optional; you can just pass each as an argument as well\n//       [\n//         React.createElement(\"h2\", {}, props.name),\n//         React.createElement(\"h3\", {}, props.animal),\n//         React.createElement(\"h4\", {}, props.breed),\n//       ]\n//     );\n//   };\n\nconst Pet = ({\n  name,\n  animal,\n  breed,\n  images,\n  location,\n  id\n}) => {\n  let defaultHeroImage = 'http://pets-images.dev-apis.com/pets/none.jpg'\n  const imageToShow = images && images.length > 0 ? images[0] : defaultHeroImage;\n\n  return (\n    <Link to={`/details/${id}`} className=\"pet\">\n      <div className=\"image-container\">\n        <img src={imageToShow} alt={name} />\n      </div>\n      <div className=\"info\">\n        <h1>{name}</h1>\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\n      </div>\n    </Link>\n  )\n}\n\nexport default Pet;","import Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n    return (\n        <div className=\"search\">\n            { !pets.length ? (\n                <h2>No pets were found.</h2>\n            ) : (\n                pets.map(pet => (\n                    <Pet\n                        name={pet.name}\n                        animal={pet.animal}\n                        breed={pet.breed}\n                        key={pet.id}\n                        images={pet.images}\n                        location={`${pet.city}, ${pet.state}`}\n                        id={pet.id}\n                    >\n                    </Pet>\n                ))\n            )}\n        </div>\n    );\n}\n\nexport default Results;","import { useState, useEffect } from \"react\";\n\n// initialize the empty cache\nconst localAnimalCache = {};\n\nexport default function useBreedList(animal) {\n    const [animalBreedList, setAnimalBreedList] = useState([]);\n    const [status, setStatus] = useState(\"unloaded\");\n\n    useEffect(() => {\n        if (!animal) {\n            setAnimalBreedList([]);\n        } else if (localAnimalCache[animal]) {\n            setAnimalBreedList(localAnimalCache[animal]);\n        } else {\n            requestAnimalBreedList();\n        }\n\n        async function requestAnimalBreedList() {\n            setAnimalBreedList([]);\n            setStatus(\"loading\");\n    \n            const requestUrl = `http://pets-v2.dev-apis.com/breeds?animal=${animal}`;\n            const response = await fetch(requestUrl);\n            // has a breeds property\n            const data = await response.json();\n            localAnimalCache[animal] = data.breeds || [];\n    \n            setAnimalBreedList(localAnimalCache[animal]);\n            setStatus(\"loaded\");\n        }\n    }, [animal]);\n\n    return [animalBreedList, status];\n}","import { useState, useEffect, useContext } from \"react\";\nimport Results from \"./Results\";\nimport ThemeContext from \"./ThemeContext\";\nimport useBreedList from \"./useBreedList\";\n\nconst ANIMALS = ['cat', 'dog', 'bird', 'reptile', 'rabbit'];\n\nconst SearchParams = () => {\n    const [location, setLocation] = useState(\"Washington, DC\");\n    const [animal, setAnimal] = useState(\"\");\n    const [breed, setBreed] = useState(\"\");\n    const [pets, setPets] = useState([]);\n    const [breeds] = useBreedList(animal);\n    const [theme, setTheme] = useContext(ThemeContext);\n\n    useEffect(() => {\n        requestPetData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    async function requestPetData() {\n        const requestUrl = `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`;\n        const response = await fetch(requestUrl);\n        // contains a pets property\n        const data = await response.json();\n\n        setPets(data.pets);\n    }\n\n    return (\n        <div className=\"search-params\">\n            <form\n                onSubmit={event => {\n                    event.preventDefault();\n                    requestPetData();\n                }}\n            >\n                <label htmlFor=\"location\">\n                    Location\n                    <input id=\"location\" onChange={event => setLocation(event.target.value)} value={location} placeholder=\"Location\" />\n                </label>\n                <label htmlFor=\"animal\">\n                    Animal\n                    <select\n                        id=\"animal\"\n                        value={animal}\n                        onChange={event => setAnimal(event.target.value)}\n                        onBlur={event => setAnimal(event.target.value)}\n                    >\n                        <option />\n                        {\n                            ANIMALS.map(animal => (\n                                <option value={animal} key={animal}>\n                                    {animal}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </label>\n                <label htmlFor=\"breed\">\n                    Breed\n                    <select\n                        id=\"breed\"\n                        value={breed}\n                        onChange={event => setBreed(event.target.value)}\n                        onBlur={event => setBreed(event.target.value)}\n                    >\n                        <option />\n                        {\n                            breeds.map(breed => (\n                                <option value={breed} key={breed}>\n                                    {breed}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </label>\n                <label htmlFor=\"theme\">\n                    Theme\n                    <select\n                        id=\"theme\"\n                        value={theme}\n                        onChange={ event => setTheme(event.target.value) }\n                        onBlur={ event => setTheme(event.target.value) }\n                    >\n                        <option value=\"pink\">Pink</option>\n                        <option value=\"orange\">Orange</option>\n                        <option value=\"turquoise\">Turquoise</option>\n                        <option value=\"red\">Red</option>\n                    </select>\n                </label>\n                <button style={{ backgroundColor: theme }}>Submit</button>\n            </form>\n            <Results pets={pets} />\n        </div>\n    )\n};\n\nexport default SearchParams;","import { StrictMode, useState } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nimport Details from './Details';\nimport SearchParams from './SearchParams';\nimport ThemeContext from './ThemeContext';\n\n// This is WITHOUT JSX\n// const AdoptionApp = () => {\n//   return React.createElement(\"div\", {}, [\n//     React.createElement(\"h1\", {}, \"Adopt Me Please!\"),\n//     React.createElement(Pet, {\n//       name: \"Xavier\",\n//       animal: \"Cat\",\n//       breed: \"Orange Tabby\",\n//     }),\n//     React.createElement(Pet, {\n//       name: \"Louis\",\n//       animal: \"Bird\",\n//       breed: \"Parrot\",\n//     }),\n//     React.createElement(Pet, { name: \"Jasper\", animal: \"Dog\", breed: \"Husky\" }),\n//   ]);\n// };\n\nconst AdoptionApp = () => {\n  const theme = useState('green')\n\n  return (\n    <StrictMode>\n      <ThemeContext.Provider value={theme}>\n        <div>\n          <header>\n            <Link to=\"/\">\n              <h1>Adopt Me Please!</h1>\n            </Link>\n          </header>\n          <Switch>\n            <Route path=\"/details/:id\">\n              <Details />\n            </Route>\n            <Route path=\"/\">\n              <SearchParams />\n            </Route>\n          </Switch>\n        </div>\n      </ThemeContext.Provider>\n    </StrictMode>\n  );\n};\n\nexport default AdoptionApp;","import express from \"express\";\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from \"react-router-dom\";\nimport fs from 'fs';\nimport AdoptionApp from '../src/app';\n\nconst PORT = process.env.PORT || 3000;\nconst html = fs.readFileSync(\"dist/index.html\").toString();\nconst parts = html.split(\"not rendered\");\n\nconst app = express();\n\napp.use(\"/dist\", express.static(\"dist\"));\napp.use((request, response) => {\n    const staticContext = {};\n    const reactMarkup = (\n        <StaticRouter url={request.url} context={staticContext}>\n            <AdoptionApp />\n        </StaticRouter>\n    )\n\n    response.status(staticContext.statusCode || 200);\n    response.send(`${parts[0]}${renderToString(reactMarkup)}${parts[1]}`);\n});\n\n\napp.listen(PORT, () => {\n    console.log(`Server is listening on port ${PORT}`);\n});\n"]}